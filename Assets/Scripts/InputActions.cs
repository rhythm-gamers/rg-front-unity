//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""db05428a-50db-43af-b17c-8b51ce39b540"",
            ""actions"": [
                {
                    ""name"": ""NoteLine0"",
                    ""type"": ""Button"",
                    ""id"": ""209d56a0-a636-407a-ae54-a8ee286ececf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NoteLine1"",
                    ""type"": ""Button"",
                    ""id"": ""e7b1732f-ef26-4377-9301-5ec8efed6a6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NoteLine2"",
                    ""type"": ""Button"",
                    ""id"": ""e46c3c23-582c-404a-902b-10f3602a61db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NoteLine3"",
                    ""type"": ""Button"",
                    ""id"": ""53c3226d-2a41-4a18-bb7d-7af1f6c37556"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpeedDown"",
                    ""type"": ""Button"",
                    ""id"": ""84480ec6-379b-4f01-87b9-097aa18cacc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpeedUp"",
                    ""type"": ""Button"",
                    ""id"": ""40fa9caf-89b3-4f6e-bcfb-b22bce928c65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""6e962b13-54d0-4c7e-85b7-8ea2414942df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""2866788b-adb2-4c37-99d9-d815f6fe22e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopGame"",
                    ""type"": ""Button"",
                    ""id"": ""01b6ad48-fdfa-497e-a395-4877066557ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JudgeUp"",
                    ""type"": ""Button"",
                    ""id"": ""d30d5343-2d2d-447c-9517-30c376132041"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JudgeDown"",
                    ""type"": ""Button"",
                    ""id"": ""27e25732-62c6-4287-b761-0390699add6b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Space"",
                    ""type"": ""Button"",
                    ""id"": ""a5dd8775-b561-4df2-aba6-1d8c669a6cf8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseBtn"",
                    ""type"": ""Button"",
                    ""id"": ""d076a48a-4528-48b9-a439-69ab96325469"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseWheel"",
                    ""type"": ""Value"",
                    ""id"": ""f4051ae3-8507-4b17-a740-bbcc6e981075"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Ctrl"",
                    ""type"": ""Button"",
                    ""id"": ""4385e1ae-146f-4bf8-a4f1-0cfaffcf0048"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowUp"",
                    ""type"": ""Button"",
                    ""id"": ""e9656a92-7a48-4ee7-b13d-075a327ad4c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowDown"",
                    ""type"": ""Button"",
                    ""id"": ""5be30b2c-dbae-46a7-ad76-ad17c8955e2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowLeft"",
                    ""type"": ""Button"",
                    ""id"": ""445009bd-cd4d-4bfe-b147-733b39b71b75"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowRight"",
                    ""type"": ""Button"",
                    ""id"": ""8c7caf36-b8c0-4391-8862-73d9658fe763"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GridOffsetDown"",
                    ""type"": ""Button"",
                    ""id"": ""1f279f38-6c6f-4832-8c32-f563f9f51927"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GridOffsetUp"",
                    ""type"": ""Button"",
                    ""id"": ""7147a1c2-268b-4ad8-b1ff-ee94912e3e40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""19eff2a5-7e25-4985-91dd-037f5bb29f4e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NoteLine0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43a47327-7aa2-478e-9137-eddbeec1b296"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NoteLine1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa7b591a-8c18-446a-87eb-3218eedd92bb"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NoteLine2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb62001a-2bef-4b67-a708-6394e9297e61"",
                    ""path"": ""<Keyboard>/quote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NoteLine3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2759c70-999d-4424-93d8-9bf0e6f68ed8"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26255616-73ec-4e04-a286-429f71ee312e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f6d380d-3c00-40e9-960b-51e271aec7bc"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4640b684-be34-439e-85b2-077233c1a57d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""628a0531-cbf2-46ca-8533-ce9504e5e79d"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79ab80e9-7b16-47b1-89f3-31310acf771f"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JudgeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50b81c0f-1b1b-414f-a846-5e4337d4e0a2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Space"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f1e3f62-8012-495f-ba7c-2ee558cae669"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseBtn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9831318b-0cca-4d97-9ebd-35522a991205"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseBtn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eec501e3-89e2-4332-8f80-ed15afda942e"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77360ffd-7146-4222-b1a3-a562b00bae21"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ctrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e464b435-9ad6-4da0-b177-f7f3cab6ef75"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b0b2d34-2a03-46a9-9b88-b80193cab338"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95784a52-f200-4fef-9728-654197c31582"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JudgeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c013110f-7021-47ac-8867-df42b61e0ece"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc1a35d0-7f42-4ccf-9f65-ba954ddfc520"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2383e86a-4c54-4aef-9721-90090498283b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GridOffsetUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f21ab0e4-f846-4815-ac26-a1d5e3c71825"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GridOffsetDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Navigator"",
            ""id"": ""75b93e53-92a0-4a3a-a8da-65e8716599a3"",
            ""actions"": [
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""0b7efc3f-89bb-438c-89eb-a36cd054f856"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowRight"",
                    ""type"": ""Button"",
                    ""id"": ""fa66ab2a-92f8-4128-9962-644b30057487"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowLeft"",
                    ""type"": ""Button"",
                    ""id"": ""8e2c8d0e-cd12-4a2d-9eba-73e1d3cd50ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowDown"",
                    ""type"": ""Button"",
                    ""id"": ""e0410ae5-a5fc-443f-9a62-20d39646f73a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowUp"",
                    ""type"": ""Button"",
                    ""id"": ""ef922010-7a98-4e43-bfe8-4cf368ca5c77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextInputField"",
                    ""type"": ""Button"",
                    ""id"": ""c873a7a7-06ad-4824-a5ec-8ab76a2a9599"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevInputField"",
                    ""type"": ""Button"",
                    ""id"": ""872efdd5-1c4e-4967-8f1a-be7086fda378"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextKeyNumTab"",
                    ""type"": ""Button"",
                    ""id"": ""df203493-071d-47d4-93cb-a19807daede4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevKeyNumTab"",
                    ""type"": ""Button"",
                    ""id"": ""761e7e63-190e-43d4-a2b8-8e69488b0b92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c8087e69-5361-4356-9ad9-880e0640eb90"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""410451c8-d190-4232-97bd-5b93fb9255c9"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a5b7538-d27a-474e-a402-b4e962ca44fd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5c193fa-cab4-49a1-9fcf-98718f629c46"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b0c5303-82da-4df9-acce-d8c8e62da6aa"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2673c5ed-0583-4288-a528-d8f1750bd371"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50f7087f-1951-417f-872a-a238f22d9e96"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextInputField"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b4d1b32-dec9-4e61-a221-faaad7bbcdc7"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextInputField"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a69aa1be-ad5f-48ca-aa0f-fa87a1b1abab"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextInputField"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7d0506f-6dda-4f2e-b725-f1b2450642d3"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextKeyNumTab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""a8491c18-da21-42b1-8e65-8f4ec0b38487"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevKeyNumTab"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""b3850172-7d33-42b0-a5b1-1ae059338787"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevKeyNumTab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""d43fade9-a2b6-43f9-9f82-38db38568841"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevKeyNumTab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""24f013cc-e7bd-4475-88e3-b0351760613e"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevInputField"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""2cb3698b-5d2a-481c-a4e9-15c6546255b0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevInputField"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""99479d0b-2ce2-48d5-a8d0-607f5283c1e2"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevInputField"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""NoteEditor"",
            ""id"": ""e4ab12ee-e02c-43de-b84a-303dd117fc33"",
            ""actions"": [
                {
                    ""name"": ""Save"",
                    ""type"": ""Button"",
                    ""id"": ""974a68ed-1427-459b-958c-e59afcea7aad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeGameMode"",
                    ""type"": ""Button"",
                    ""id"": ""1e663e82-4752-4d6c-9899-404edbaf621e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""bdcc0389-cada-467e-9199-142883182d3a"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f2d140af-6d05-46b2-a2cd-242240ba2b13"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""7866c105-2f29-4dbc-9a5b-167f96fb282d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f11a1524-fadb-46f9-a71a-0fb67524d00e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeGameMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_NoteLine0 = m_Player.FindAction("NoteLine0", throwIfNotFound: true);
        m_Player_NoteLine1 = m_Player.FindAction("NoteLine1", throwIfNotFound: true);
        m_Player_NoteLine2 = m_Player.FindAction("NoteLine2", throwIfNotFound: true);
        m_Player_NoteLine3 = m_Player.FindAction("NoteLine3", throwIfNotFound: true);
        m_Player_SpeedDown = m_Player.FindAction("SpeedDown", throwIfNotFound: true);
        m_Player_SpeedUp = m_Player.FindAction("SpeedUp", throwIfNotFound: true);
        m_Player_Enter = m_Player.FindAction("Enter", throwIfNotFound: true);
        m_Player_ESC = m_Player.FindAction("ESC", throwIfNotFound: true);
        m_Player_StopGame = m_Player.FindAction("StopGame", throwIfNotFound: true);
        m_Player_JudgeUp = m_Player.FindAction("JudgeUp", throwIfNotFound: true);
        m_Player_JudgeDown = m_Player.FindAction("JudgeDown", throwIfNotFound: true);
        m_Player_Space = m_Player.FindAction("Space", throwIfNotFound: true);
        m_Player_MouseBtn = m_Player.FindAction("MouseBtn", throwIfNotFound: true);
        m_Player_MouseWheel = m_Player.FindAction("MouseWheel", throwIfNotFound: true);
        m_Player_Ctrl = m_Player.FindAction("Ctrl", throwIfNotFound: true);
        m_Player_ArrowUp = m_Player.FindAction("ArrowUp", throwIfNotFound: true);
        m_Player_ArrowDown = m_Player.FindAction("ArrowDown", throwIfNotFound: true);
        m_Player_ArrowLeft = m_Player.FindAction("ArrowLeft", throwIfNotFound: true);
        m_Player_ArrowRight = m_Player.FindAction("ArrowRight", throwIfNotFound: true);
        m_Player_GridOffsetDown = m_Player.FindAction("GridOffsetDown", throwIfNotFound: true);
        m_Player_GridOffsetUp = m_Player.FindAction("GridOffsetUp", throwIfNotFound: true);
        // Navigator
        m_Navigator = asset.FindActionMap("Navigator", throwIfNotFound: true);
        m_Navigator_Enter = m_Navigator.FindAction("Enter", throwIfNotFound: true);
        m_Navigator_ArrowRight = m_Navigator.FindAction("ArrowRight", throwIfNotFound: true);
        m_Navigator_ArrowLeft = m_Navigator.FindAction("ArrowLeft", throwIfNotFound: true);
        m_Navigator_ArrowDown = m_Navigator.FindAction("ArrowDown", throwIfNotFound: true);
        m_Navigator_ArrowUp = m_Navigator.FindAction("ArrowUp", throwIfNotFound: true);
        m_Navigator_NextInputField = m_Navigator.FindAction("NextInputField", throwIfNotFound: true);
        m_Navigator_PrevInputField = m_Navigator.FindAction("PrevInputField", throwIfNotFound: true);
        m_Navigator_NextKeyNumTab = m_Navigator.FindAction("NextKeyNumTab", throwIfNotFound: true);
        m_Navigator_PrevKeyNumTab = m_Navigator.FindAction("PrevKeyNumTab", throwIfNotFound: true);
        // NoteEditor
        m_NoteEditor = asset.FindActionMap("NoteEditor", throwIfNotFound: true);
        m_NoteEditor_Save = m_NoteEditor.FindAction("Save", throwIfNotFound: true);
        m_NoteEditor_ChangeGameMode = m_NoteEditor.FindAction("ChangeGameMode", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_NoteLine0;
    private readonly InputAction m_Player_NoteLine1;
    private readonly InputAction m_Player_NoteLine2;
    private readonly InputAction m_Player_NoteLine3;
    private readonly InputAction m_Player_SpeedDown;
    private readonly InputAction m_Player_SpeedUp;
    private readonly InputAction m_Player_Enter;
    private readonly InputAction m_Player_ESC;
    private readonly InputAction m_Player_StopGame;
    private readonly InputAction m_Player_JudgeUp;
    private readonly InputAction m_Player_JudgeDown;
    private readonly InputAction m_Player_Space;
    private readonly InputAction m_Player_MouseBtn;
    private readonly InputAction m_Player_MouseWheel;
    private readonly InputAction m_Player_Ctrl;
    private readonly InputAction m_Player_ArrowUp;
    private readonly InputAction m_Player_ArrowDown;
    private readonly InputAction m_Player_ArrowLeft;
    private readonly InputAction m_Player_ArrowRight;
    private readonly InputAction m_Player_GridOffsetDown;
    private readonly InputAction m_Player_GridOffsetUp;
    public struct PlayerActions
    {
        private @InputActions m_Wrapper;
        public PlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @NoteLine0 => m_Wrapper.m_Player_NoteLine0;
        public InputAction @NoteLine1 => m_Wrapper.m_Player_NoteLine1;
        public InputAction @NoteLine2 => m_Wrapper.m_Player_NoteLine2;
        public InputAction @NoteLine3 => m_Wrapper.m_Player_NoteLine3;
        public InputAction @SpeedDown => m_Wrapper.m_Player_SpeedDown;
        public InputAction @SpeedUp => m_Wrapper.m_Player_SpeedUp;
        public InputAction @Enter => m_Wrapper.m_Player_Enter;
        public InputAction @ESC => m_Wrapper.m_Player_ESC;
        public InputAction @StopGame => m_Wrapper.m_Player_StopGame;
        public InputAction @JudgeUp => m_Wrapper.m_Player_JudgeUp;
        public InputAction @JudgeDown => m_Wrapper.m_Player_JudgeDown;
        public InputAction @Space => m_Wrapper.m_Player_Space;
        public InputAction @MouseBtn => m_Wrapper.m_Player_MouseBtn;
        public InputAction @MouseWheel => m_Wrapper.m_Player_MouseWheel;
        public InputAction @Ctrl => m_Wrapper.m_Player_Ctrl;
        public InputAction @ArrowUp => m_Wrapper.m_Player_ArrowUp;
        public InputAction @ArrowDown => m_Wrapper.m_Player_ArrowDown;
        public InputAction @ArrowLeft => m_Wrapper.m_Player_ArrowLeft;
        public InputAction @ArrowRight => m_Wrapper.m_Player_ArrowRight;
        public InputAction @GridOffsetDown => m_Wrapper.m_Player_GridOffsetDown;
        public InputAction @GridOffsetUp => m_Wrapper.m_Player_GridOffsetUp;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @NoteLine0.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine0;
                @NoteLine0.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine0;
                @NoteLine0.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine0;
                @NoteLine1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine1;
                @NoteLine1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine1;
                @NoteLine1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine1;
                @NoteLine2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine2;
                @NoteLine2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine2;
                @NoteLine2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine2;
                @NoteLine3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine3;
                @NoteLine3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine3;
                @NoteLine3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNoteLine3;
                @SpeedDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpeedDown;
                @SpeedDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpeedDown;
                @SpeedDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpeedDown;
                @SpeedUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpeedUp;
                @SpeedUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpeedUp;
                @SpeedUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpeedUp;
                @Enter.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnter;
                @ESC.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnESC;
                @ESC.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnESC;
                @ESC.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnESC;
                @StopGame.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStopGame;
                @StopGame.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStopGame;
                @StopGame.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStopGame;
                @JudgeUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJudgeUp;
                @JudgeUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJudgeUp;
                @JudgeUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJudgeUp;
                @JudgeDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJudgeDown;
                @JudgeDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJudgeDown;
                @JudgeDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJudgeDown;
                @Space.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpace;
                @Space.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpace;
                @Space.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpace;
                @MouseBtn.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseBtn;
                @MouseBtn.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseBtn;
                @MouseBtn.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseBtn;
                @MouseWheel.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseWheel;
                @Ctrl.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCtrl;
                @Ctrl.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCtrl;
                @Ctrl.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCtrl;
                @ArrowUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowUp;
                @ArrowUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowUp;
                @ArrowUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowUp;
                @ArrowDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowDown;
                @ArrowDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowDown;
                @ArrowDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowDown;
                @ArrowLeft.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowLeft;
                @ArrowLeft.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowLeft;
                @ArrowLeft.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowLeft;
                @ArrowRight.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowRight;
                @ArrowRight.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowRight;
                @ArrowRight.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowRight;
                @GridOffsetDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGridOffsetDown;
                @GridOffsetDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGridOffsetDown;
                @GridOffsetDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGridOffsetDown;
                @GridOffsetUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGridOffsetUp;
                @GridOffsetUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGridOffsetUp;
                @GridOffsetUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGridOffsetUp;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NoteLine0.started += instance.OnNoteLine0;
                @NoteLine0.performed += instance.OnNoteLine0;
                @NoteLine0.canceled += instance.OnNoteLine0;
                @NoteLine1.started += instance.OnNoteLine1;
                @NoteLine1.performed += instance.OnNoteLine1;
                @NoteLine1.canceled += instance.OnNoteLine1;
                @NoteLine2.started += instance.OnNoteLine2;
                @NoteLine2.performed += instance.OnNoteLine2;
                @NoteLine2.canceled += instance.OnNoteLine2;
                @NoteLine3.started += instance.OnNoteLine3;
                @NoteLine3.performed += instance.OnNoteLine3;
                @NoteLine3.canceled += instance.OnNoteLine3;
                @SpeedDown.started += instance.OnSpeedDown;
                @SpeedDown.performed += instance.OnSpeedDown;
                @SpeedDown.canceled += instance.OnSpeedDown;
                @SpeedUp.started += instance.OnSpeedUp;
                @SpeedUp.performed += instance.OnSpeedUp;
                @SpeedUp.canceled += instance.OnSpeedUp;
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
                @StopGame.started += instance.OnStopGame;
                @StopGame.performed += instance.OnStopGame;
                @StopGame.canceled += instance.OnStopGame;
                @JudgeUp.started += instance.OnJudgeUp;
                @JudgeUp.performed += instance.OnJudgeUp;
                @JudgeUp.canceled += instance.OnJudgeUp;
                @JudgeDown.started += instance.OnJudgeDown;
                @JudgeDown.performed += instance.OnJudgeDown;
                @JudgeDown.canceled += instance.OnJudgeDown;
                @Space.started += instance.OnSpace;
                @Space.performed += instance.OnSpace;
                @Space.canceled += instance.OnSpace;
                @MouseBtn.started += instance.OnMouseBtn;
                @MouseBtn.performed += instance.OnMouseBtn;
                @MouseBtn.canceled += instance.OnMouseBtn;
                @MouseWheel.started += instance.OnMouseWheel;
                @MouseWheel.performed += instance.OnMouseWheel;
                @MouseWheel.canceled += instance.OnMouseWheel;
                @Ctrl.started += instance.OnCtrl;
                @Ctrl.performed += instance.OnCtrl;
                @Ctrl.canceled += instance.OnCtrl;
                @ArrowUp.started += instance.OnArrowUp;
                @ArrowUp.performed += instance.OnArrowUp;
                @ArrowUp.canceled += instance.OnArrowUp;
                @ArrowDown.started += instance.OnArrowDown;
                @ArrowDown.performed += instance.OnArrowDown;
                @ArrowDown.canceled += instance.OnArrowDown;
                @ArrowLeft.started += instance.OnArrowLeft;
                @ArrowLeft.performed += instance.OnArrowLeft;
                @ArrowLeft.canceled += instance.OnArrowLeft;
                @ArrowRight.started += instance.OnArrowRight;
                @ArrowRight.performed += instance.OnArrowRight;
                @ArrowRight.canceled += instance.OnArrowRight;
                @GridOffsetDown.started += instance.OnGridOffsetDown;
                @GridOffsetDown.performed += instance.OnGridOffsetDown;
                @GridOffsetDown.canceled += instance.OnGridOffsetDown;
                @GridOffsetUp.started += instance.OnGridOffsetUp;
                @GridOffsetUp.performed += instance.OnGridOffsetUp;
                @GridOffsetUp.canceled += instance.OnGridOffsetUp;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Navigator
    private readonly InputActionMap m_Navigator;
    private INavigatorActions m_NavigatorActionsCallbackInterface;
    private readonly InputAction m_Navigator_Enter;
    private readonly InputAction m_Navigator_ArrowRight;
    private readonly InputAction m_Navigator_ArrowLeft;
    private readonly InputAction m_Navigator_ArrowDown;
    private readonly InputAction m_Navigator_ArrowUp;
    private readonly InputAction m_Navigator_NextInputField;
    private readonly InputAction m_Navigator_PrevInputField;
    private readonly InputAction m_Navigator_NextKeyNumTab;
    private readonly InputAction m_Navigator_PrevKeyNumTab;
    public struct NavigatorActions
    {
        private @InputActions m_Wrapper;
        public NavigatorActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Enter => m_Wrapper.m_Navigator_Enter;
        public InputAction @ArrowRight => m_Wrapper.m_Navigator_ArrowRight;
        public InputAction @ArrowLeft => m_Wrapper.m_Navigator_ArrowLeft;
        public InputAction @ArrowDown => m_Wrapper.m_Navigator_ArrowDown;
        public InputAction @ArrowUp => m_Wrapper.m_Navigator_ArrowUp;
        public InputAction @NextInputField => m_Wrapper.m_Navigator_NextInputField;
        public InputAction @PrevInputField => m_Wrapper.m_Navigator_PrevInputField;
        public InputAction @NextKeyNumTab => m_Wrapper.m_Navigator_NextKeyNumTab;
        public InputAction @PrevKeyNumTab => m_Wrapper.m_Navigator_PrevKeyNumTab;
        public InputActionMap Get() { return m_Wrapper.m_Navigator; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NavigatorActions set) { return set.Get(); }
        public void SetCallbacks(INavigatorActions instance)
        {
            if (m_Wrapper.m_NavigatorActionsCallbackInterface != null)
            {
                @Enter.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnEnter;
                @ArrowRight.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowRight;
                @ArrowRight.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowRight;
                @ArrowRight.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowRight;
                @ArrowLeft.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowLeft;
                @ArrowLeft.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowLeft;
                @ArrowLeft.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowLeft;
                @ArrowDown.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowDown;
                @ArrowDown.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowDown;
                @ArrowDown.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowDown;
                @ArrowUp.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowUp;
                @ArrowUp.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowUp;
                @ArrowUp.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnArrowUp;
                @NextInputField.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnNextInputField;
                @NextInputField.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnNextInputField;
                @NextInputField.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnNextInputField;
                @PrevInputField.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnPrevInputField;
                @PrevInputField.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnPrevInputField;
                @PrevInputField.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnPrevInputField;
                @NextKeyNumTab.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnNextKeyNumTab;
                @NextKeyNumTab.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnNextKeyNumTab;
                @NextKeyNumTab.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnNextKeyNumTab;
                @PrevKeyNumTab.started -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnPrevKeyNumTab;
                @PrevKeyNumTab.performed -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnPrevKeyNumTab;
                @PrevKeyNumTab.canceled -= m_Wrapper.m_NavigatorActionsCallbackInterface.OnPrevKeyNumTab;
            }
            m_Wrapper.m_NavigatorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
                @ArrowRight.started += instance.OnArrowRight;
                @ArrowRight.performed += instance.OnArrowRight;
                @ArrowRight.canceled += instance.OnArrowRight;
                @ArrowLeft.started += instance.OnArrowLeft;
                @ArrowLeft.performed += instance.OnArrowLeft;
                @ArrowLeft.canceled += instance.OnArrowLeft;
                @ArrowDown.started += instance.OnArrowDown;
                @ArrowDown.performed += instance.OnArrowDown;
                @ArrowDown.canceled += instance.OnArrowDown;
                @ArrowUp.started += instance.OnArrowUp;
                @ArrowUp.performed += instance.OnArrowUp;
                @ArrowUp.canceled += instance.OnArrowUp;
                @NextInputField.started += instance.OnNextInputField;
                @NextInputField.performed += instance.OnNextInputField;
                @NextInputField.canceled += instance.OnNextInputField;
                @PrevInputField.started += instance.OnPrevInputField;
                @PrevInputField.performed += instance.OnPrevInputField;
                @PrevInputField.canceled += instance.OnPrevInputField;
                @NextKeyNumTab.started += instance.OnNextKeyNumTab;
                @NextKeyNumTab.performed += instance.OnNextKeyNumTab;
                @NextKeyNumTab.canceled += instance.OnNextKeyNumTab;
                @PrevKeyNumTab.started += instance.OnPrevKeyNumTab;
                @PrevKeyNumTab.performed += instance.OnPrevKeyNumTab;
                @PrevKeyNumTab.canceled += instance.OnPrevKeyNumTab;
            }
        }
    }
    public NavigatorActions @Navigator => new NavigatorActions(this);

    // NoteEditor
    private readonly InputActionMap m_NoteEditor;
    private INoteEditorActions m_NoteEditorActionsCallbackInterface;
    private readonly InputAction m_NoteEditor_Save;
    private readonly InputAction m_NoteEditor_ChangeGameMode;
    public struct NoteEditorActions
    {
        private @InputActions m_Wrapper;
        public NoteEditorActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Save => m_Wrapper.m_NoteEditor_Save;
        public InputAction @ChangeGameMode => m_Wrapper.m_NoteEditor_ChangeGameMode;
        public InputActionMap Get() { return m_Wrapper.m_NoteEditor; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NoteEditorActions set) { return set.Get(); }
        public void SetCallbacks(INoteEditorActions instance)
        {
            if (m_Wrapper.m_NoteEditorActionsCallbackInterface != null)
            {
                @Save.started -= m_Wrapper.m_NoteEditorActionsCallbackInterface.OnSave;
                @Save.performed -= m_Wrapper.m_NoteEditorActionsCallbackInterface.OnSave;
                @Save.canceled -= m_Wrapper.m_NoteEditorActionsCallbackInterface.OnSave;
                @ChangeGameMode.started -= m_Wrapper.m_NoteEditorActionsCallbackInterface.OnChangeGameMode;
                @ChangeGameMode.performed -= m_Wrapper.m_NoteEditorActionsCallbackInterface.OnChangeGameMode;
                @ChangeGameMode.canceled -= m_Wrapper.m_NoteEditorActionsCallbackInterface.OnChangeGameMode;
            }
            m_Wrapper.m_NoteEditorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Save.started += instance.OnSave;
                @Save.performed += instance.OnSave;
                @Save.canceled += instance.OnSave;
                @ChangeGameMode.started += instance.OnChangeGameMode;
                @ChangeGameMode.performed += instance.OnChangeGameMode;
                @ChangeGameMode.canceled += instance.OnChangeGameMode;
            }
        }
    }
    public NoteEditorActions @NoteEditor => new NoteEditorActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnNoteLine0(InputAction.CallbackContext context);
        void OnNoteLine1(InputAction.CallbackContext context);
        void OnNoteLine2(InputAction.CallbackContext context);
        void OnNoteLine3(InputAction.CallbackContext context);
        void OnSpeedDown(InputAction.CallbackContext context);
        void OnSpeedUp(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnESC(InputAction.CallbackContext context);
        void OnStopGame(InputAction.CallbackContext context);
        void OnJudgeUp(InputAction.CallbackContext context);
        void OnJudgeDown(InputAction.CallbackContext context);
        void OnSpace(InputAction.CallbackContext context);
        void OnMouseBtn(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
        void OnCtrl(InputAction.CallbackContext context);
        void OnArrowUp(InputAction.CallbackContext context);
        void OnArrowDown(InputAction.CallbackContext context);
        void OnArrowLeft(InputAction.CallbackContext context);
        void OnArrowRight(InputAction.CallbackContext context);
        void OnGridOffsetDown(InputAction.CallbackContext context);
        void OnGridOffsetUp(InputAction.CallbackContext context);
    }
    public interface INavigatorActions
    {
        void OnEnter(InputAction.CallbackContext context);
        void OnArrowRight(InputAction.CallbackContext context);
        void OnArrowLeft(InputAction.CallbackContext context);
        void OnArrowDown(InputAction.CallbackContext context);
        void OnArrowUp(InputAction.CallbackContext context);
        void OnNextInputField(InputAction.CallbackContext context);
        void OnPrevInputField(InputAction.CallbackContext context);
        void OnNextKeyNumTab(InputAction.CallbackContext context);
        void OnPrevKeyNumTab(InputAction.CallbackContext context);
    }
    public interface INoteEditorActions
    {
        void OnSave(InputAction.CallbackContext context);
        void OnChangeGameMode(InputAction.CallbackContext context);
    }
}
